Develop OpenGL program to draw a line using Bresenhamâ€™s algorithm for all types of
slopes
#include <GL/glut.h>
#include <stdio.h>
#include <stdlib.h>
#define GLUT_DISABLE_ATEXIT_HACK
int x_start, y_start, x_end, y_end;
void setPixel(int x, int y) {
glBegin(GL_POINTS);
glVertex2i(x, y);
glEnd();
glFlush();
}
void bresenhamLine(int x1, int y1, int x2, int y2) {
int dx = abs(x2 - x1), dy = abs(y2 - y1);
int sx = x1 < x2 ? 1 : -1;
int sy = y1 < y2 ? 1 : -1;
int err = dx - dy;
while (1) {
setPixel(x1, y1);
if (x1 == x2 && y1 == y2) break;
int e2 = 2 * err;
if (e2 > -dy) {
err -= dy;
x1 += sx;
}
if (e2 < dx) {
err += dx;
y1 += sy;
}
}
}
void display() {
glClear(GL_COLOR_BUFFER_BIT);
bresenhamLine(x_start, y_start, x_end, y_end);
glFlush();
}
void init() {
glClearColor(0.0, 0.0, 0.0, 1.0);
glColor3f(1.0, 1.0, 1.0);
glPointSize(2.0);
gluOrtho2D(0, 500, 0, 500);
}
int main(int argc, char** argv) {
printf("Enter the coordinates of the first point (x1 y1): ");
scanf("%d %d", &x_start, &y_start);
printf("Enter the coordinates of the second point (x2 y2): ");
scanf("%d %d", &x_end, &y_end);
glutInit(&argc, argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize(500, 500);
glutInitWindowPosition(100, 100);
glutCreateWindow("Bresenham's Line Algorithm");
init();
glutDisplayFunc(display);
glutMainLoop();
return 0;
}
