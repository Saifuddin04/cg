Develop an OpenGL program to draw a simple scene containing few 3D objects and
provide day and night effect. Define suitably the position and properties of the light
sources used in the scene.
#include <GL/glut.h>
// Light properties for day and night
GLfloat dayAmbientLight[] = { 0.8f, 0.8f, 0.8f, 1.0f };
GLfloat dayDiffuseLight[] = { 1.0f, 1.0f, 1.0f, 1.0f };
GLfloat daySpecularLight[] = { 1.0f, 1.0f, 1.0f, 1.0f };
GLfloat nightAmbientLight[] = { 0.2f, 0.2f, 0.5f, 1.0f };
GLfloat nightDiffuseLight[] = { 0.5f, 0.5f, 1.0f, 1.0f };
GLfloat nightSpecularLight[] = { 0.7f, 0.7f, 1.0f, 1.0f };
GLfloat lightPosition[] = { 0.0f, 5.0f, 5.0f, 1.0f };
// Flag for day/night toggle
bool isDay = true;
void initLighting() {
glEnable(GL_LIGHTING);
glEnable(GL_LIGHT0);
// Default to day lighting
glLightfv(GL_LIGHT0, GL_AMBIENT, dayAmbientLight);
glLightfv(GL_LIGHT0, GL_DIFFUSE, dayDiffuseLight);
glLightfv(GL_LIGHT0, GL_SPECULAR, daySpecularLight);
glLightfv(GL_LIGHT0, GL_POSITION, lightPosition);
}
void toggleDayNight() {
isDay = !isDay;
if (isDay) {
glLightfv(GL_LIGHT0, GL_AMBIENT, dayAmbientLight);
glLightfv(GL_LIGHT0, GL_DIFFUSE, dayDiffuseLight);
glLightfv(GL_LIGHT0, GL_SPECULAR, daySpecularLight);
} else {
glLightfv(GL_LIGHT0, GL_AMBIENT, nightAmbientLight);
glLightfv(GL_LIGHT0, GL_DIFFUSE, nightDiffuseLight);
glLightfv(GL_LIGHT0, GL_SPECULAR, nightSpecularLight);
}
glutPostRedisplay();
}
void drawCube() {
glutSolidCube(1.0);
}
void drawSphere() {
glutSolidSphere(0.5, 50, 50);
}
void drawScene() {
glPushMatrix();
glTranslatef(-1.5f, 0.0f, -6.0f);
drawCube();
glPopMatrix();
glPushMatrix();
glTranslatef(1.5f, 0.0f, -6.0f);
drawSphere();
glPopMatrix();
}
void display() {
glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
glLoadIdentity();
gluLookAt(0.0, 0.0, 5.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0);
drawScene();
glutSwapBuffers();
}
void reshape(int w, int h) {
glViewport(0, 0, (GLsizei)w, (GLsizei)h);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluPerspective(45.0, (GLfloat)w / (GLfloat)h, 1.0, 100.0);
glMatrixMode(GL_MODELVIEW);
}
void keyboard(unsigned char key, int x, int y) {
if (key == 't' || key == 'T') {
toggleDayNight();
}
}
int main(int argc, char** argv) {
glutInit(&argc, argv);
glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
glutInitWindowSize(800, 600);
glutInitWindowPosition(100, 100);
glutCreateWindow("3D Scene with Day and Night Effect");
glEnable(GL_DEPTH_TEST);
initLighting();
glutDisplayFunc(display);
glutReshapeFunc(reshape);
glutKeyboardFunc(keyboard);
glutMainLoop();
return 0;
}  
